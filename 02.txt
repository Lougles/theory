Массив — структура данных для хранения и манипулирования коллекцией индексированных значений. Используются для хранения упорядоченных коллекций данных, например списка курортов, товаров, клиентов в отеле и т. п.
Примитивы: строки, числа, були,null и undefined
split(s) — позволяет превратить строку в массив, разбив ее по разделителю s. Это не метод массива, но рассматриваем мы его сейчас, так как раньше мы о массивах не знали.
join(s) — делает в точности противоположное split. Он берет массив и склеивает его в строку, используя s как разделитель.
array.indexOf(x) — возвращает первый индекс, в котором элемент x был найден в массиве или число -1, если такого элемента нет. Используйте indexOf тогда, когда необходимо получить непосредственно индекс элемента.
array.includes(x) — определяет, содержит ли массив некоторый элемент x, возвращая true или false соответственно. Используйте includes тогда, когда необходимо проверить есть ли элемент в массиве и не важен его порядковый номер.
push() — позволяет добавить один или несколько элементов в конец массива. Метод возвращает значение свойства length, которое определяет количество элементов в массиве.
pop() — удаляет элемент из конца массива и возвращает удаленный элемент. Если массив пуст, метод возвращает undefined.
shift() — удаляет элемент из начала массива и возвращает его (элемента) значение.
unshift() — добавляет элемент в начало массива.
Синтаксис метода slice() одинаков для строк и массивов. Его просто запомнить. Он позволяет извлекать элементы подмножества массива и добавлять их в новый массив. В большинстве случаев используется для создания копии части или целого исходного массива.
splice() — швейцарский нож для работы с массивами, в том случае, если исходный массив необходимо изменить. Позволяет удалять, добавлять и заменять элементы в произвольном месте массива.
Функция - это подпрограмма, независимая часть кода, предназначенная для выполнения конкретной задачи.
Функциональное выражение (function expression) — обычное объявление переменной, значение которой будет функция.
Псевдомассив — коллекция, имеющая свойство length и возможность обратиться к элементу по индексу, но отсутствием большинства методов для работы с массивом.
Область видимости (scope) — это независимая от языка концепция, которая описывает доступность переменных в исполняемом коде.
Scope chain (цепочка областей видимости) - области видимости образуют иерархию, так что дочерние области имеют доступ к переменным из родительских областей, но не наоборот.
Переменные, объявленные на самом верхнем уровне, то есть вне любых конструкций вроде if, while, for и функций, находятся в глобальной области видимости.
Переменные, объявленные внутри инструкций if, циклов и других блоков кода находятся в блочной области видимости.
Переменные, объявленные внутри функций, находятся в области видимости функции.
Фаза компиляции, интерпретации или оценки (compile time, evaluation time) - подготовка перед исполнением кода, проверка валидности синтаксиса исходного кода.
Фаза исполнения (runtime) - скрипт начинает исполняться, выполняются инструкции вызовов функций и оценки выражений, происходит поиск необходимых идентификаторов в соответствующих областях видимости и тому подобное.
Поднятие переменных (hoisting) - это механизм интерпретатора, который, до фазы исполнения кода, поднимает объявления переменных в начало области видимости (блочной или функции) в которой они были объявлены.















